Do composition:
	Entity + Component type architecture
	
Make good use of signals
have a single Main/Game/Level script that sets up and spawns everything

Entities:
	have components for Attacks/Skills, Hitbox, Health, stats etc...
	Control their own movement logic

Before starting define your initial components (Hitbox, health, etc...)
Design in a way that allows adding a removing components easy
Avoid BaseClasses where possible
Before starting/before making a new thing define what it's components are

TopDownshooter

	Components:
		Hitbox
		health
		Stats
		
	Entities:
		Player
		Enemies
		Weapon?
		Base
		Map obsticles? (Walls, rocks, etc...)

	Spawners:
		Enemy Spawner
		
	Mechanics:
		Shooting:
			Player calls shoot of their weapon > weapon tells shooting component it shot?
	
	Manager (Manage connection between nodes in main scene):


LEARNING:
	object.signal_for_object.connect(name_of_function)
		What this does is connects object's signal to current object's function "name_of_function"
